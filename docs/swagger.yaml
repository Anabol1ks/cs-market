definitions:
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  response.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  response.TokenResponse:
    properties:
      access_token:
        type: string
    type: object
  response.UserResponse:
    properties:
      avatarurl:
        type: string
      steam_id:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Обновление токена доступа с помощью refresh_token
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление токена доступа
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "400":
          description: Ошибка получения refresh_token из куки
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Неверный refresh_token
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка генерации токенов
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновление токена доступа
      tags:
      - auth
  /auth/steam:
    get:
      consumes:
      - application/json
      description: Авторизация через Steam и получение токенов доступа (для теста
        требуется подключение в steam хоста с https)
      produces:
      - application/json
      responses:
        "303":
          description: Redirect URL
          schema:
            type: string
        "400":
          description: Ошибка начала авторизации Steam
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Авторизация через Steam
      tags:
      - auth
  /auth/steam/callback:
    get:
      consumes:
      - application/json
      description: Обработчик коллбэка после авторизации через Steam и получение токенов
        доступа
      produces:
      - application/json
      responses:
        "303":
          description: Ссылка с указанием токенов доступа
          schema:
            type: string
        "400":
          description: Ошибка авторизации Steam
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка генерации токенов" "Ошибка входа в систему
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обработчик коллбэка после авторизации через Steam
      tags:
      - auth
  /auth/verify:
    get:
      consumes:
      - application/json
      description: Проверка токена доступа
      produces:
      - application/json
      responses:
        "200":
          description: Токен доступа действителен
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "401":
          description: Невалидный токен
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Проверка токена доступа
      tags:
      - auth
  /profile:
    get:
      consumes:
      - application/json
      description: Получение информации о своём профиле пользователя
      produces:
      - application/json
      responses:
        "200":
          description: Информация о профиле
          schema:
            $ref: '#/definitions/response.UserResponse'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение профиля пользователя
      tags:
      - users
  /profile/inventory:
    get:
      consumes:
      - application/json
      description: Получение инвентаря пользователя
      produces:
      - application/json
      responses:
        "200":
          description: Информация об инвентаре
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение инвентаря пользователя
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
